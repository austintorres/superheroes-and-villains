{"version":3,"sources":["components/SearchBar.js","components/CharacterCard.js","components/SelectionModal.js","App.js","index.js"],"names":["SearchBar","getCharacter","error","setError","isLoading","useState","input","setInput","Row","className","Form","onSubmit","e","preventDefault","Group","controlId","Label","Control","placeholder","value","onChange","target","Text","Button","variant","disabled","Spinner","as","animation","size","role","aria-hidden","type","CharacterCard","characterInfo","powers","Object","keys","powerstats","Col","Image","src","image","url","alt","name","biography","map","quality","md","ProgressBar","now","label","SelectionModal","show","setShow","setCharacterInfo","characterList","selectedItem","setSelectedItem","handleChange","Modal","Header","Title","Body","chosenOne","find","item","id","character","Check","checked","App","setIsLoading","setCharacterList","characterName","a","fetch","response","json","data","ok","Error","filteredData","results","filter","toLowerCase","length","message","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f20eaba8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Row, Button, Form, Spinner } from 'react-bootstrap';\n\nfunction SearchBar({ getCharacter, error, setError, isLoading }) {\n  const [input, setInput] = useState('');\n\n  const handleChange = (e) => {\n    setError(null);\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    getCharacter(input);\n    setInput('');\n  };\n\n  return (\n    <Row className=\"justify-content-center\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Search for a hero or villain!</Form.Label>\n          <Form.Control placeholder=\"e.g. Spiderman\" value={input} onChange={handleChange} />\n          {error ? <Form.Text className=\"text-danger\">{error}</Form.Text> : null}\n        </Form.Group>\n        {isLoading ? (\n          <Button variant=\"primary\" disabled>\n            <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\n            Loading...\n          </Button>\n        ) : (\n          <Button type=\"submit\">Get Character</Button>\n        )}\n      </Form>\n    </Row>\n  );\n}\n\nexport default SearchBar;","import React from 'react';\nimport { Row, Col, Image, ProgressBar } from 'react-bootstrap';\n\nfunction CharacterCard({ characterInfo }) {\n  const powers = Object.keys(characterInfo.powerstats);\n  return (\n    <Row>\n      <Col>\n        <Image src={characterInfo.image.url} alt=\"Superhero or Villain\" />\n      </Col>\n      <Col>\n        <p>Name: {characterInfo.name}</p>\n        <p>Secret Identity: {characterInfo.biography['full-name']}</p>\n        <p>Power Stats:</p>\n        {powers.map((quality) => (\n          <Row>\n            <Col>\n              <p>{quality}</p>\n            </Col>\n            <Col md={8}>\n              <ProgressBar\n                now={characterInfo.powerstats[quality]}\n                label={`${characterInfo.powerstats[quality]}`}\n              />\n            </Col>\n          </Row>\n        ))}\n      </Col>\n    </Row>\n  );\n}\n\nexport default CharacterCard;","import React, { useState } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\n\nconst SelectionModal = ({ show, setShow, setCharacterInfo, characterList }) => {\n  const [selectedItem, setSelectedItem] = useState();\n\n  const handleChange = (e) => {\n    setSelectedItem(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let chosenOne = characterList.find((item) => item.id === selectedItem);\n    setCharacterInfo(chosenOne);\n    setShow(false);\n  };\n\n  return (\n    <Modal show={show}>\n      <Modal.Header>\n        <Modal.Title>Which one?</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={handleSubmit}>\n          {characterList\n            ? characterList.map((character) => {\n                return (\n                  <Form.Check\n                    type=\"radio\"\n                    value={character.id}\n                    checked={selectedItem === character.id}\n                    label={`${character.biography['full-name']}`}\n                    onChange={handleChange}\n                  />\n                );\n              })\n            : null}\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default SelectionModal;","import React, { useState } from 'react';\nimport SearchBar from './components/SearchBar';\nimport CharacterCard from './components/CharacterCard';\nimport { Container, Row } from 'react-bootstrap';\nimport SelectionModal from './components/SelectionModal';\n\nfunction App() {\n  const [characterInfo, setCharacterInfo] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [show, setShow] = useState(false);\n  const [characterList, setCharacterList] = useState(null);\n\n  const getCharacter = async (characterName) => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(\n        `https://cors-anywhere.herokuapp.com/https://superheroapi.com/api/3401549706550150/search/${characterName}`\n      );\n      const data = await response.json();\n      if (!response.ok || data.response === 'error') {\n        throw Error(`\"${characterName}\" not found. Try again!`);\n      }\n      const filteredData = data.results.filter(\n        (item) => characterName.toLowerCase() === item.name.toLowerCase()\n      );\n      setCharacterList(filteredData);\n      if (filteredData.length === 1) {\n        setCharacterInfo(filteredData[0]);\n      } else {\n        setShow(true);\n      }\n    } catch (err) {\n      setError(err.message);\n      setCharacterInfo(null);\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <h1>Superheroes And Villains</h1>\n      </Row>\n      <SearchBar\n        error={error}\n        isLoading={isLoading}\n        setError={setError}\n        getCharacter={getCharacter}\n      />\n      {characterInfo && !error ? <CharacterCard characterInfo={characterInfo} /> : null}\n      <SelectionModal\n        show={show}\n        setCharacterInfo={setCharacterInfo}\n        characterList={characterList}\n        setShow={setShow}\n      />\n    </Container>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}